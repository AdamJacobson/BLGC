package GUI;

import Main.ArmorSet;
import Parts.StandardDefinitions;
import java.awt.Color;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JLabel;

public class ArmorStatsPanel extends javax.swing.JPanel implements Observer {

    private StandardDefinitions sd = new StandardDefinitions();
    
    private Model model;
    
    private int panelIDNumber;
    
    private ArmorSet thisArmorSet;

    /**
     * Creates new form ArmorStatsPanel
     */
    public ArmorStatsPanel()
    {
        initComponents();
    }

    public void setModel(Model m)
    {
        model = m;
        model.addObserver(this);
    }
    
    public void setPanelIDNumber(int id)
    {
        panelIDNumber = id;
    }
    
    @Override
    public void update(Observable obs, Object obj)
    {
        thisArmorSet = model.getArmorSet(panelIDNumber);
        
        healthDisplayLabel.setText(thisArmorSet.getHealth() + "");
        armorDisplayLabel.setText(thisArmorSet.getArmor() + "%");
        hrvEnergyDisplayLabel.setText(thisArmorSet.getHrvEnergy() + "u");
        hrvRechargeDisplayLabel.setText(thisArmorSet.getHrvRecharge() + "u/s");
        speedDisplayLabel.setText(thisArmorSet.getRunSpeed() + "m/s");
        staminaDisplayLabel.setText(thisArmorSet.getStamina() + "s");
        gearSlotsDisplayLabel.setText(thisArmorSet.getNumberOfGearSlots() + "");
        
        changeLabelColorsForComparison();
    }

    /**
     * Perform comparison of stats for the armor set whose stats are shown
     * in this ArmorStatsPanel. Change the label to red or green depending
     * on if the stat is better or worse than the other ArmorSet.
     */
    public void changeLabelColorsForComparison()
    {
        ArmorSet comparison = model.getComparisonArmorSet(panelIDNumber);
        
        compareStats(thisArmorSet.getHealth(), comparison.getHealth(),
                healthDisplayLabel, true);
        compareStats(thisArmorSet.getArmor(), comparison.getArmor(),
                armorDisplayLabel, true);
        compareStats(thisArmorSet.getHrvEnergy(), comparison.getHrvEnergy(),
                hrvEnergyDisplayLabel, true);
        compareStats(thisArmorSet.getHrvRecharge(), comparison.getHrvRecharge(),
                hrvRechargeDisplayLabel, true);
        compareStats(thisArmorSet.getNumberOfGearSlots(), comparison.getNumberOfGearSlots(),
                gearSlotsDisplayLabel, true);
        compareStats(thisArmorSet.getRunSpeed(), comparison.getRunSpeed(),
                speedDisplayLabel, true);
        compareStats(thisArmorSet.getStamina(), comparison.getStamina(),
                staminaDisplayLabel, true);
    }
    
    
    /**
     * Compares the a stat from two armor sets: The main armor set and the comparison
     * armor set. Comparisons are relative to the main armor set.
     *
     * @param main The stat from the main armor set
     * @param comp The stat from the comparison armor set
     * @param label The label whose color will be changed depending on the
     * results of the comparison.
     * @param moreIsBetter Is a stat considered better if it is a higher value?
     */
    private void compareStats(double main, double comp, JLabel label, boolean moreIsBetter)
    {
        double stat1 = main;
        double stat2 = comp;

        if (!moreIsBetter)
        {
            stat1 = comp;
            stat2 = main;
        }

        if (model.getColorCompareArmor())
        {
            if (stat1 > stat2)
            {
                label.setForeground(sd.DARK_GREEN);
            }
            else if (stat1 < stat2)
            {
                label.setForeground(sd.DARK_RED);
            }
            else
            {
                label.setForeground(Color.BLACK);
            }
        }
        else
        {
            label.setForeground(Color.BLACK);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        staminaLabel = new javax.swing.JLabel();
        hrvRechargeLabel = new javax.swing.JLabel();
        armorLabel = new javax.swing.JLabel();
        gearSlotsLabel = new javax.swing.JLabel();
        speedLabel = new javax.swing.JLabel();
        hrvEnergyLabel = new javax.swing.JLabel();
        damageLabel = new javax.swing.JLabel();
        gearSlotsDisplayLabel = new javax.swing.JLabel();
        speedDisplayLabel = new javax.swing.JLabel();
        hrvEnergyDisplayLabel = new javax.swing.JLabel();
        healthDisplayLabel = new javax.swing.JLabel();
        armorDisplayLabel = new javax.swing.JLabel();
        hrvRechargeDisplayLabel = new javax.swing.JLabel();
        staminaDisplayLabel = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Stats", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, null, new java.awt.Color(0, 0, 0)));

        staminaLabel.setText("Stamina :");

        hrvRechargeLabel.setText("HRV Recharge :");

        armorLabel.setText("Armor :");

        gearSlotsLabel.setText("Gear Slots :");

        speedLabel.setText("Speed :");

        hrvEnergyLabel.setText("HRV Energy :");

        damageLabel.setText("Health :");

        gearSlotsDisplayLabel.setText("         ");

        speedDisplayLabel.setText("        ");

        hrvEnergyDisplayLabel.setText("          ");

        healthDisplayLabel.setText("        ");

        armorDisplayLabel.setText("           ");

        hrvRechargeDisplayLabel.setText("           ");

        staminaDisplayLabel.setText("           ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gearSlotsLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(speedLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(hrvEnergyLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(damageLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gearSlotsDisplayLabel)
                    .addComponent(speedDisplayLabel)
                    .addComponent(hrvEnergyDisplayLabel)
                    .addComponent(healthDisplayLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hrvRechargeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(staminaLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(armorLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(armorDisplayLabel)
                    .addComponent(hrvRechargeDisplayLabel)
                    .addComponent(staminaDisplayLabel))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(damageLabel)
                    .addComponent(armorLabel)
                    .addComponent(healthDisplayLabel)
                    .addComponent(armorDisplayLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hrvEnergyLabel)
                    .addComponent(hrvRechargeLabel)
                    .addComponent(hrvEnergyDisplayLabel)
                    .addComponent(hrvRechargeDisplayLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(speedLabel)
                    .addComponent(staminaLabel)
                    .addComponent(speedDisplayLabel)
                    .addComponent(staminaDisplayLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gearSlotsLabel)
                    .addComponent(gearSlotsDisplayLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel armorDisplayLabel;
    private javax.swing.JLabel armorLabel;
    private javax.swing.JLabel damageLabel;
    private javax.swing.JLabel gearSlotsDisplayLabel;
    private javax.swing.JLabel gearSlotsLabel;
    private javax.swing.JLabel healthDisplayLabel;
    private javax.swing.JLabel hrvEnergyDisplayLabel;
    private javax.swing.JLabel hrvEnergyLabel;
    private javax.swing.JLabel hrvRechargeDisplayLabel;
    private javax.swing.JLabel hrvRechargeLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel speedDisplayLabel;
    private javax.swing.JLabel speedLabel;
    private javax.swing.JLabel staminaDisplayLabel;
    private javax.swing.JLabel staminaLabel;
    // End of variables declaration//GEN-END:variables
}
