package GUI;

import GUI.contoller.SaveController;

/**
 * A tab for the MainTabbedPanel in BLGCMainFrame. Contains two
 * WeaponCreationPanels.
 */
public class WeaponTabPanel extends javax.swing.JPanel {

    /**
     * The pointer to the Model that the program will use. Is initialized in
     * BLGCMainFrame.java
     */
    private Model model;

    /**
     * If primary is true, then this WeaponComponentSelectionPanel deals with
     * primary receivers; If false, it deals with secondary ones. Used here for
     * the Compare Toggle Button.
     */
    private boolean primary;

    private boolean compare;

    /**
     * Creates new form PrimaryWeaponPanel
     */
    public WeaponTabPanel()
    {
        initComponents();
        compare = true;
    }

    public void setSaveController(SaveController sc)
    {
        weaponCreationPanelLower.setSaveController(sc);
        weaponCreationPanelUpper.setSaveController(sc);
    }
    
    public void enableAllSubparts(boolean enable)
    {
        comparyWeaponToggleButton.setEnabled(enable);
        
        weaponCreationPanelLower.enableAllSubparts(enable);
        weaponCreationPanelUpper.enableAllSubparts(enable);
    }
    
    /**
     * Sets the panelIdNumbers for the 2 WeaponCreationPanels in this TabPanel.
     * They are numbered consecutively.
     *
     * @param idNum The ID number for the first panel. The second panel will be
     * idNum + 1.
     * @param primary If this WeaponTabPanel involves primary weapons.
     */
    public void setPanelIDNumberAndPrimacy(int idNum, boolean primary)
    {
        weaponCreationPanelUpper.setPanelIDNumberAndPrimacy(idNum, primary); // 0 or 2
        weaponCreationPanelLower.setPanelIDNumberAndPrimacy(idNum + 1, primary); // 1 or 3
        this.primary = primary;
    }

    /**
     * @param m The model
     */
    public void setModel(Model m)
    {
        weaponCreationPanelLower.setModel(m);
        weaponCreationPanelUpper.setModel(m);
        model = m;
        model.setColorCompareWeapon(primary, compare);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        comparyWeaponToggleButton = new javax.swing.JToggleButton();
        weaponCreationPanelUpper = new GUI.WeaponCreationPanel();
        weaponCreationPanelLower = new GUI.WeaponCreationPanel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        comparyWeaponToggleButton.setSelected(true);
        comparyWeaponToggleButton.setText("Compare");
        comparyWeaponToggleButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                comparyWeaponToggleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(weaponCreationPanelLower, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(weaponCreationPanelUpper, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(comparyWeaponToggleButton)
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(weaponCreationPanelUpper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comparyWeaponToggleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(weaponCreationPanelLower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comparyWeaponToggleButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_comparyWeaponToggleButtonActionPerformed
    {//GEN-HEADEREND:event_comparyWeaponToggleButtonActionPerformed
        // TODO add your handling code here:
        compare = !compare;
        model.setColorCompareWeapon(primary, compare);
    }//GEN-LAST:event_comparyWeaponToggleButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton comparyWeaponToggleButton;
    private GUI.WeaponCreationPanel weaponCreationPanelLower;
    private GUI.WeaponCreationPanel weaponCreationPanelUpper;
    // End of variables declaration//GEN-END:variables
}
